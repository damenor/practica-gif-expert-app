{"version":3,"sources":["components/CategoryAdd.js","components/PageTitle.js","components/PageGridItem.js","helpers/getGifs.js","components/PageGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["CategoryAdd","setCategories","useState","inputValue","setInputValue","onSubmit","event","preventDefault","trim","length","categories","type","value","autoFocus","placeholder","onChange","target","PageTitle","title","PageGridItem","id","url","className","src","alt","getGifs","category","a","encodeURI","response","fetch","json","data","gifs","map","gif","images","downsized_medium","PageGrid","responseDefault","loading","state","setstate","useEffect","setTimeout","then","useFetchGifs","console","log","key","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"6MAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEZC,mBAAS,IAFG,mBAEzCC,EAFyC,KAE7BC,EAF6B,KAchD,OACE,0BAAMC,SATa,SAAAC,GACnBA,EAAMC,iBACHJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAc,SAAAS,GAAU,OAAKP,GAAL,mBAAoBO,OAC5CN,EAAc,OAMd,2BACEO,KAAK,OACLC,MAAOT,EACPU,WAAW,EACXC,YAAY,6BACZC,SAjBmB,SAAAT,GAAK,OAAIF,EAAcE,EAAMU,OAAOJ,YCLlDK,EAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OAAgB,4BAAMA,ICElCC,EAAe,SAAC,GAAuB,EAArBC,GAAsB,IAAlBF,EAAiB,EAAjBA,MAAOG,EAAU,EAAVA,IAExC,OADAH,EAAQA,EAAMV,OAEZ,yBAAKc,UAAU,oDACb,yBAAKC,IAAKF,EAAKG,IAAKN,IAElBA,GACE,yBAAKI,UAAU,gC,uBCXZG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,4DACL,mCACF,GACRN,EAHe,iDAGiCO,UAAUF,GAH3C,kBAEP,GAFO,oBACL,oCAGVG,EAAWC,MAAMT,GAJF,SAKSQ,EALT,8BAKmBE,OALnB,uBAKbC,EALa,EAKbA,KACFC,EAAOD,EAAKE,KAAI,SAAAC,GAAG,YAAK,CAC5Bf,GAAIe,EAAIf,GACRF,MAAOiB,EAAIjB,MACXG,IAAG,UAAEc,EAAIC,cAAN,aAAE,EAAYC,iBAAiBhB,QATf,kBAWdY,GAXc,4CAAH,sDCKPK,EAAW,SAAC,GAAkB,IAAD,ECFd,SAACZ,GAE3B,IAAMa,EAAkB,CACtBP,KAAM,GACNQ,SAAS,GAJ6B,EAMdtC,mBAASqC,GANK,mBAMjCE,EANiC,KAM1BC,EAN0B,KAqBxC,OAbAC,qBAAU,WAUR,OATAD,EAASH,GACTK,YAAW,WACTnB,EAAQC,GAAUmB,MAAK,SAAAb,GACrBU,EAAS,CACPV,OACAQ,SAAS,SAGZ,KACI,eACN,CAACd,IAEGe,EDjBmBK,CAFc,EAAfpB,UAEjBM,EAFgC,EAEhCA,KAAMQ,EAF0B,EAE1BA,QAGd,OAFAO,QAAQC,IAAI,aAAchB,EAAMQ,GAG9B,oCAEEA,EACE,yBAAKlB,UAAU,WACb,yBAAKA,UAAU,UACb,yBAAKA,UAAU,YAInB,yBAAKA,UAAU,aAEb,yBAAKA,UAAU,wBAEXU,EAAKvB,OAAS,GAAKuB,EAAKE,KAAI,SAAAC,GAAG,OAC7B,kBAAC,EAAD,eAAcc,IAAG,cAASd,EAAIf,KAAUe,WEpB3Ce,EAAe,WAC1B,IADgC,EAGIhD,mBAAS,CAAC,cAHd,mBAGzBQ,EAHyB,KAGbT,EAHa,KAKhC,OACE,oCACE,kBAAC,EAAD,CAAWiB,MAND,iBAOV,kBAAC,EAAD,CAAajB,cAAeA,IAC5B,yBAAKqB,UAAU,YAKb,kBAAC,EAAD,CAAUI,SAAUhB,EAAW,OCbvCyC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.d7cdaeed.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const CategoryAdd = ({ setCategories }) => {\r\n\r\n  const [inputValue, setInputValue] = useState('')\r\n\r\n  const handleInputValue = event => setInputValue(event.target.value) \r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault()\r\n    if(inputValue.trim().length > 2) {\r\n      setCategories(categories => [inputValue, ...categories])\r\n      setInputValue('')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input \r\n        type=\"text\"\r\n        value={inputValue}\r\n        autoFocus={true}\r\n        placeholder=\"¿Qué estas buscando?\"\r\n        onChange={handleInputValue}/>\r\n    </form>\r\n  )\r\n}\r\n\r\nCategoryAdd.propTypes = {\r\n  setCategories: PropTypes.func.isRequired\r\n}\r\n","import React from 'react'\r\n\r\nexport const PageTitle = ({ title }) => (<h1>{ title }</h1>)\r\n","import React from 'react'\r\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n// import { faHeart, faEye, faShare } from '@fortawesome/free-solid-svg-icons'\r\n\r\nexport const PageGridItem = ({ id, title, url }) => {\r\n  title = title.trim()\r\n  return (\r\n    <div className=\"page-grid-item animate__animated animate__fadeIn\">\r\n      <img src={url} alt={title} />\r\n      {\r\n        title &&\r\n          <div className=\"page-grid-item__container\">\r\n            {/* <p>{ title }</p> */}\r\n            {/* <div className=\"page-grid-item__buttons\">\r\n              <FontAwesomeIcon icon={faHeart} />\r\n              <FontAwesomeIcon icon={faEye} />\r\n              <FontAwesomeIcon icon={faShare} />\r\n            </div> */}\r\n          </div>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n","export const getGifs = async (category) => {\r\n  const API_KEY = 'ShIhvt1d3DMY4fI4naGyv96cH5FJluqu'\r\n  const limit = 12\r\n  const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=${limit}&api_key=${API_KEY}`\r\n  const response = fetch(url)\r\n  const { data } = await (await response).json()\r\n  const gifs = data.map(gif => ({\r\n    id: gif.id,\r\n    title: gif.title,\r\n    url: gif.images?.downsized_medium.url\r\n  }))\r\n  return gifs\r\n}","import React from 'react'\r\nimport { PageGridItem } from './PageGridItem'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\n// import { getGifs } from '../helpers/getGifs'\r\n\r\nexport const PageGrid = ({ category }) => {\r\n\r\n  const { data, loading } = useFetchGifs(category)\r\n  console.log('ME EJECUTO', data, loading)\r\n\r\n  return (\r\n    <>\r\n      { \r\n      loading ? \r\n        <div className=\"loading\">\r\n          <div className=\"circle\">\r\n            <div className=\"inner\"></div>\r\n          </div>\r\n        </div>\r\n      : \r\n        <div className=\"page-grid\">\r\n          {/* <h3>{ category }</h3> */}\r\n          <div className=\"page-grid__container\">\r\n            {\r\n              data.length > 0 && data.map(gif => (\r\n                <PageGridItem key={`gif-${gif.id}`} {...gif} />\r\n              ))\r\n            }\r\n          </div>\r\n        </div>\r\n      }\r\n    </>\r\n  )\r\n}\r\n","import { useState, useEffect } from 'react'\r\nimport { getGifs } from '../helpers/getGifs'\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n  const responseDefault = {\r\n    data: [],\r\n    loading: true\r\n  }\r\n  const [state, setstate] = useState(responseDefault)\r\n\r\n  useEffect(() => {\r\n    setstate(responseDefault)\r\n    setTimeout(() => {\r\n      getGifs(category).then(data => {\r\n        setstate({\r\n          data, \r\n          loading: false\r\n        })\r\n      })\r\n    }, 300)\r\n    return () => {}\r\n  }, [category])\r\n\r\n  return state\r\n\r\n}","import React, { useState } from 'react';\r\nimport { CategoryAdd } from './components/CategoryAdd';\r\nimport { PageTitle } from './components/PageTitle';\r\nimport { PageGrid } from './components/PageGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n  const title = 'GifExpertApp';\r\n\r\n  const [categories, setCategories] = useState(['One Punch']);\r\n\r\n  return (\r\n    <>\r\n      <PageTitle title={title} />\r\n      <CategoryAdd setCategories={setCategories} />\r\n      <div className=\"divider\"></div>\r\n      {\r\n        // categories.map((category) => (\r\n        //   <PageGrid key={`category-${category}`} category={category} />\r\n        // ))\r\n        <PageGrid category={categories[0]} />\r\n      }\r\n    </>\r\n  );\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport { GifExpertApp } from './GifExpertApp';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}